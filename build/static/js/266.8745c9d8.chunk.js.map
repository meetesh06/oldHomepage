{"version":3,"file":"static/js/266.8745c9d8.chunk.js","mappings":"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","sources":["pages/Home.js","../node_modules/@mui/lab/Masonry/masonryClasses.js","../node_modules/@mui/lab/Masonry/Masonry.js"],"sourcesContent":["import { Masonry } from \"@mui/lab\";\nimport TextCard from \"../components/TextCard\";\n\nimport { NEWSITEMS, RESEARCHINTERESTS, LOOKINGFORTEXT, ABOUTME, SKILLSTEXT, SKILLSITEMS, QUOTE, INTERESTS, EDUCATION } from \"../config\";\n\nimport {AnimatePresence, motion} from 'framer-motion';\nimport { useEffect } from \"react\";\n\n\n\nfunction Home(props) {\n  const staticContentVariants = {\n    show: {\n      opacity: 1,\n      scale: 1,\n      transition: {\n        duration: 0.3\n      }\n    },\n    out: {\n      opacity: 0,\n      scale: 0.9,\n      transition: {\n        duration: 0.3\n      }\n    }\n  }\n\n  const { preloadList } = props;\n\n  const doPreload = () => {\n    preloadList.forEach(e => {\n      e.preload()\n    })\n  }\n  return (\n    <motion.div\n      initial=\"out\"\n      animate=\"show\"\n      exit=\"out\"\n      variants={staticContentVariants}\n      onAnimationComplete={doPreload}\n    >\n      <Masonry \n        columns={{ xs: 1, sm: 1, md: 3, lg: 3 }}\n        spacing={0}\n        >\n        <TextCard key={`home-${1}`} title=\"News\" \n                textList={NEWSITEMS}/>\n        <TextCard key={`home-${2}`} title=\"Research Interests\" text={RESEARCHINTERESTS} />\n\n        <TextCard key={`home-${3}`} title=\"Looking For\" text={LOOKINGFORTEXT} />\n        <TextCard key={`home-${4}`} title=\"Something About Me\" text={ABOUTME} />\n        <TextCard\n                key={`home-${5}`}\n                title=\"Skills\"\n                text={SKILLSTEXT}\n                textList={SKILLSITEMS}\n                />\n        <TextCard key={`home-${6}`} text={QUOTE} />\n        <TextCard\n          key={`home-${7}`}\n          title=\"Interests\"\n          text={INTERESTS}\n        />\n        <TextCard key={`home-${8}`} title=\"Education\" textList={EDUCATION}/>\n\n      </Masonry>\n    </motion.div>\n  )\n}\n\nexport default Home","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getMasonryUtilityClass(slot) {\n  return generateUtilityClass('MuiMasonry', slot);\n}\nconst masonryClasses = generateUtilityClasses('MuiMasonry', ['root']);\nexport default masonryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { flushSync } from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\nconst lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n  // Only applicable for Server-Side Rendering\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n  const spacingStyleFromPropValue = propValue => {\n    let spacing;\n    // in case of string/number value\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      const themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n    return _extends({\n      margin: `calc(0px - (${spacing} / 2))`,\n      '& > *': {\n        margin: `calc(${spacing} / 2)`\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`\n    });\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue));\n\n  // configure width for responsive spacing values\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n      return null;\n    }));\n  }\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      columns = 4,\n      spacing = 1,\n      defaultColumns,\n      defaultHeight,\n      defaultSpacing\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);\n      // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      }\n      // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      flushSync(() => {\n        setMaxColumnHeight(Math.max(...columnHeights));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current;\n    // IE and old browsers are not supported\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n\n  //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;"],"names":["props","preloadList","initial","animate","exit","variants","show","opacity","scale","transition","duration","out","onAnimationComplete","forEach","e","preload","columns","xs","sm","md","lg","spacing","title","textList","NEWSITEMS","text","RESEARCHINTERESTS","LOOKINGFORTEXT","ABOUTME","SKILLSTEXT","SKILLSITEMS","QUOTE","INTERESTS","EDUCATION","getMasonryUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","parseToNumber","val","Number","replace","lineBreakStyle","flexBasis","width","margin","padding","MasonryRoot","styled","name","overridesResolver","styles","root","ownerState","theme","display","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","i","defaultColumns","order","height","defaultHeight","_extends","toFixed","spacingValues","resolveBreakpointValues","values","breakpoints","transformer","createUnarySpacing","deepmerge","handleBreakpoints","propValue","isNaN","themeSpacingValue","getValue","maxColumnHeight","Math","ceil","columnValues","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","React","inProps","ref","useThemeProps","children","className","component","other","_objectWithoutPropertiesLoose","masonryRef","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","classes","composeClasses","useUtilityClasses","observer","ResizeObserver","masonryChildren","current","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","flushSync","max","resizeObserver","childNode","observe","disconnect","handleRef","useForkRef","lineBreaks","map","_","index","_jsx","_jsxs","as","clsx"],"sourceRoot":""}
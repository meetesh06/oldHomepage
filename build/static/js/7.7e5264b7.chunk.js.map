{"version":3,"sources":["components/PostCard.js","pages/Blog.js"],"names":["useStyles","makeStyles","theme","card","newsItem","marginRight","spacing","fontWeight","color","palette","type","primary","light","dark","PostCard","props","classes","post","React","hovered","setHovered","className","Card","layout","component","motion","div","whileHover","variants","hover","scale","onHoverStart","onHoverEnd","raised","CardActionArea","Link","id","to","parsePostUrl","title","CardContent","Typography","variant","created","gutterBottom","description","Blog","useSelector","selectCurrentPost","posts","getPostsJson","useEffect","document","getElementById","scrollIntoView","behavior","block","inline","preloadList","forEach","e","preload","initial","animate","exit","hidden","opacity","show","transition","duration","out","Hidden","mdUp","Divider","sx","marginBottom","marginTop","Masonry","columns","xs","sm","md","lg","map","index","LinearProgress"],"mappings":"kOAWMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GAMNC,SAAU,CACRC,YAAaH,EAAMI,QAAQ,GAC3BC,WAAY,OACZC,MAA8B,SAAvBN,EAAMO,QAAQC,KAAkBR,EAAMO,QAAQE,QAAQC,MAAQV,EAAMO,QAAQE,QAAQE,UAIhF,SAASC,EAASC,GAC/B,IAAMC,EAAUhB,IACRiB,EAASF,EAATE,KAF8B,EAGRC,YAAe,GAHP,mBAG/BC,EAH+B,KAGtBC,EAHsB,KAqBtC,OACE,qBAAKC,UAAWL,EAAQb,KAAxB,SAEE,cAACmB,EAAA,EAAD,CACEC,QAAM,EACNC,UAAWC,IAAOC,IAClBC,WAAW,QACXC,SAAU,CACRC,MAAO,CACLC,MAAO,OAIXC,aAAc,kBAAMX,GAAW,IAC/BY,WAAY,kBAAMZ,GAAW,IAC7Ba,OAAQd,EAZV,SAcI,cAACe,EAAA,EAAD,CACEV,UAAWW,IACXC,GAAE,eAAUnB,EAAKmB,IACjBC,GAAIC,YAAarB,EAAKmB,GAAInB,EAAKsB,OAHjC,SAKE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQlC,MAAM,iBAAlC,SACKS,EAAK0B,UAEV,cAACF,EAAA,EAAD,CAAYG,cAAY,EAACF,QAAQ,KAAKlB,UAAU,MAAhD,SACGP,EAAKsB,QAER,cAACE,EAAA,EAAD,CAAYC,QAAQ,OAAOlC,MAAM,iBAAjC,SACKS,EAAK4B,uB,qCCyCTC,UAvGf,SAAc/B,GACZ,IAmBIE,EAAO8B,YAAYC,KACjBC,EAAQF,YAAYG,KAC1BC,qBAAU,WACJlC,GACcmC,SAASC,eAAT,eAAgCpC,EAAKmB,KAC7CkB,eAAe,CAACC,SAAU,SAAUC,MAAO,SAAUC,OAAQ,cAEtE,CAACxC,IA3Be,IA6BXyC,EAAgB3C,EAAhB2C,YAOR,OANAP,qBAAU,WACRO,EAAYC,SAAQ,SAAAC,GAClBA,EAAEC,eAEH,CAACZ,IAECA,EAAMA,MAKT,eAACxB,EAAA,EAAOC,IAAR,CACEoC,QAAQ,SACRC,QAAQ,OACRC,KAAK,MACLpC,SA5C0B,CAC5BqC,OAAQ,CAACC,QAAS,EAAGpC,MAAO,IAC5BqC,KAAM,CACJD,QAAS,EACTpC,MAAO,EACPsC,WAAY,CACVC,SAAU,KAGdC,IAAK,CACHJ,QAAS,EACTpC,MAAO,GACPsC,WAAY,CACVC,SAAU,MA2Bd,UAMA,cAACE,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACC,EAAA,EAAD,CAASC,GAAI,SAACxE,GAAY,MAAO,CAAEyE,aAAczE,EAAMI,QAAQ,GAAIsE,UAAW1E,EAAMI,QAAQ,SAE9F,cAACuE,EAAA,EAAD,CACEC,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACpC5E,QAAS,EAFX,SAKM2C,EAAMA,MAAMkC,KAAI,SAAClE,EAAMmE,GAAP,OACd,cAACtE,EAAD,CAAgCG,KAAMA,GAAtC,eAAuBmE,YAnBxB,cAACC,EAAA,EAAD,CAAgB7E,MAAM","file":"static/js/7.7e5264b7.chunk.js","sourcesContent":["import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@mui/styles';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport { useTheme } from '@emotion/react';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { parsePostUrl } from './helper';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    // width: 325,\n    // padding: theme.spacing(1),\n    // paddingTop: 0,\n    // paddingBottom: theme.spacing(2)\n  },\n  newsItem: { \n    marginRight: theme.spacing(1),\n    fontWeight: 'bold', \n    color: theme.palette.type === 'dark' ? theme.palette.primary.light : theme.palette.primary.dark\n  }\n}))\n\nexport default function PostCard(props) {\n  const classes = useStyles();\n  const { post } = props\n  const [hovered, setHovered] = React.useState(false);\n\n  const listContainer = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2\n        // staggerDirection: -1\n      }\n    }\n  }\n\n  const listItem = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 }\n  }\n  \n  return (\n    <div className={classes.card} >\n\n      <Card\n        layout \n        component={motion.div}\n        whileHover=\"hover\"\n        variants={{\n          hover: {\n            scale: 1.02,\n          }\n        }}\n        // style={{ paddingBottom: 50 }}\n        onHoverStart={() => setHovered(true)}\n        onHoverEnd={() => setHovered(false)}\n        raised={hovered}\n        >\n          <CardActionArea\n            component={Link}\n            id={`post-${post.id}`}\n            to={parsePostUrl(post.id, post.title)}\n          >\n            <CardContent>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                  {post.created}\n              </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {post.title}\n              </Typography>\n              <Typography variant=\"body\" color=\"text.secondary\">\n                  {post.description}\n              </Typography>\n            </CardContent>\n\n          </CardActionArea>\n      </Card>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@mui/styles';\n\nimport Box from '@mui/material/Box';\nimport { Divider, Hidden, LinearProgress, Skeleton, Typography } from '@mui/material';\nimport PostCard from '../components/PostCard';\n\nimport { useSelector } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\nimport { Masonry } from '@mui/lab';\n\nimport {motion} from 'framer-motion';\n\nfunction Blog(props) {\n  const staticContentVariants = {\n    hidden: {opacity: 0, scale: 0.90 },\n    show: {\n      opacity: 1,\n      scale: 1,\n      transition: {\n        duration: 0.3\n      }\n    },\n    out: {\n      opacity: 0,\n      scale: 0.90,\n      transition: {\n        duration: 0.3\n      }\n    }\n  }\n\n  // Hooks\n  let post = useSelector(selectCurrentPost);\n  const posts = useSelector(getPostsJson);\n  useEffect(() => {\n    if (post) {\n      const element = document.getElementById(`post-${post.id}`);\n      element.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"});\n    }\n  }, [post]);\n\n  const { preloadList } = props;\n  useEffect(() => {\n    preloadList.forEach(e => {\n      e.preload()\n    })\n  }, [posts]);\n\n  if (!posts.posts) {\n    return <LinearProgress color=\"secondary\" />\n  }\n\n  return (\n    <motion.div \n      initial=\"hidden\"\n      animate=\"show\"\n      exit=\"out\"\n      variants={staticContentVariants}\n    >\n    <Hidden mdUp>\n      <Divider sx={(theme) => { return { marginBottom: theme.spacing(1), marginTop: theme.spacing(1) } }}/>\n    </Hidden>\n    <Masonry \n      columns={{ xs: 1, sm: 2, md: 3, lg: 3 }}\n      spacing={2}\n      >\n        {\n          posts.posts.map((post, index) => (\n            <PostCard key={`post-${index}`} post={post}/>\n          ))\n        }\n      </Masonry>\n      </motion.div>\n      );\n    // <div className={classes.root}>\n    //   <div>\n    //       <div className={classes.tabContainer}>\n    //         <Tabs\n    //           variant=\"scrollable\"\n    //           scrollButtons\n    //           value={value}\n    //           onChange={handleChange}\n    //           aria-label=\"lineage selector\"\n    //           allowScrollButtonsMobile>\n    //           {\n    //             blogData.categories.map((label, index) => (\n    //               <Tab key={index+\"tab-section\"} label={label} {...a11yProps(index)} />\n    //             ))\n    //           }\n    //         </Tabs>\n    //       </div>\n    //     {\n    //       blogData.categories.map((label, index) => {\n    //         return (\n    //           <TabPanel value={value} index={index} key={index+\"tab\"}>\n    //             <Grid container spacing={0}>\n    //               {\n    //                 JSONPath({path: `$.posts[?(@.category === '${label}')]`, json: blogData}).map((post) => (\n    //                   <Grid item xs={12} sm={4} key={post.id}>\n    //                     <PostCard post={post}/>\n    //                   </Grid>\n    //                 ))\n    //               }\n    //             </Grid>\n    //           </TabPanel>\n    //         );\n    //       })\n    //     }\n\n\n    //   </div>\n    // </div>\n  // );\n}\n\nexport default Blog;\n"],"sourceRoot":""}
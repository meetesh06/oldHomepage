{"version":3,"sources":["components/TextCard.js","components/RightSidebar.js","components/ImageCard.js","components/AnimatedText.js","components/NavBar.js","pages/Layout.js","hooks/useFetch.js","App.js","features/sidebarState.js","store.js","index.js","config.js","components/helper.js","features/allPostsSlice.js","features/currentPostSlice.js","features/secretState.js"],"names":["useStyles","makeStyles","theme","card","padding","spacing","newsItem","marginRight","fontWeight","color","palette","type","primary","light","dark","TextCard","props","classes","title","text","links","textList","index","useState","hovered","setHovered","controls","useAnimation","useInView","ref","inView","useEffect","start","listItem","hidden","opacity","show","className","layout","component","motion","div","whileHover","variants","hover","scale","onHoverStart","onHoverEnd","raised","gutterBottom","variant","ul","transition","staggerChildren","initial","animate","style","map","data","li","listStyle","length","link","href","target","size","rightAside","marginBottom","lineageList","maxHeight","overflow","passButton","marginTop","RightSidebar","posts","useSelector","getPostsJson","post","selectCurrentPost","React","open","setOpen","navigate","useNavigate","lineageData","undefined","lineage","JSONPath","path","json","sort","sortPosts","list","id","name","calculateLineage","duration","lineageHolder","button","onClick","in","timeout","unmountOnExit","dense","parsePostUrl","selected","secondary","created","info","ImageCard","imageUri","small","Card","CardMedia","height","image","alt","CardContent","Typography","CardActions","idx","Button","Wrapper","children","tagMap","paragraph","heading1","AnimatedCharacters","item","y","ease","visible","splitWords","split","words","entries","push","word","Tag","flat","element","display","span","pages","NavBar","anchorElNav","setAnchorElNav","location","useLocation","handleCloseNavMenu","AppBar","elevation","position","Container","maxWidth","Toolbar","disableGutters","Box","sx","top","xs","md","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","onClose","page","MenuItem","disabled","Link","to","textAlign","flexGrow","AnimatedText","SITENAME","currPath","pathname","my","Blog","lazyWithPreload","Home","PostPage","Layout","isMain","isBlog","Fragment","Grid","container","sm","lg","IMAGEURI","USERNAME","ABOUTUSER","GETINTOUCHTEXT","CONTACTLINKS","fallback","LinearProgress","preloadList","RoutingWrapper","useFetch","url","other","response","setResponse","loading","setLoading","error","setError","axios","get","then","catch","console","warn","finally","root","uniqueReq","nonCachedRequest","URI_POSTS","MainContainer","dispatch","useDispatch","alert","setAlert","updatePostsJson","timer","setTimeout","clearTimeout","CssBaseline","Alert","bottom","right","left","severity","App","themeLight","createTheme","mode","background","paper","blueGrey","default","themeDark","responsiveFontSizes","ThemeProvider","ScopedCssBaseline","enableColorScheme","sidebarSlice","createSlice","initialState","mobileVisible","reducers","updateVisiblity","state","action","payload","actions","configureStore","reducer","postsJson","postsJsonReducer","currentPost","currentSliceReducer","sidebarState","secretState","ReactDOM","render","store","document","getElementById","URI_POST_FILES","NEWSITEMS","INTERESTS","SKILLSTEXT","SKILLSITEMS","LOOKINGFORTEXT","QUOTE","RESEARCHINTERESTS","EDUCATION","ABOUTME","Date","getTime","a","b","allPostsSlice","currentSlice","updateCurrentPost","secretSlice","secret","updateSecret","selectSecret"],"mappings":"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","file":"static/js/main.377e67e7.chunk.js","sourcesContent":["import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@mui/styles';\nimport { Button, CardActions } from '@mui/material';\nimport { useTheme } from '@emotion/react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from \"react-intersection-observer\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    // width: 325,\n    padding: theme.spacing(1)\n  },\n  newsItem: { \n    marginRight: theme.spacing(1),\n    fontWeight: 'bold', \n    color: theme.palette.type === 'dark' ? theme.palette.primary.light : theme.palette.primary.dark\n  }\n}))\n\nexport default function TextCard(props) {\n  const classes = useStyles();\n  const { title, text, links, textList, index } = props\n  const [hovered, setHovered] = useState(false);\n\n  const controls = useAnimation();\n  const [ref, inView] = useInView();\n\n  useEffect(() => {\n    if (inView) {\n      controls.start(\"show\");\n    }\n  }, [controls, inView]);\n\n  const listContainer = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2\n      }\n    }\n  }\n\n  const listItem = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 }\n  }\n  \n  return (\n    <div className={classes.card} >\n\n      <Card\n        key={index}\n        layout \n        component={motion.div}\n        whileHover=\"hover\"\n        variants={{\n          hover: {\n            scale: 1.02,\n          }\n        }}\n        onHoverStart={() => setHovered(true)}\n        onHoverEnd={() => setHovered(false)}\n        raised={hovered}\n        \n        >\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {title}\n          </Typography>\n          <Typography variant=\"body\" color=\"text.secondary\">\n              {\n              text && text\n              }\n          </Typography>\n          <Typography \n            ref={ref}\n            component={motion.ul}\n            variants={listContainer}\n            initial=\"hidden\"\n            animate={controls}\n            // animate=\"show\"\n            variant=\"body\"\n            style={{\n              padding: 0\n            }}\n            color=\"text.secondary\">\n            {\n              textList && (\n                textList.map((data,index) => \n                  <motion.li key={`${data[0]}-${index}`} style={{listStyle: 'none'}} variants={listItem}>\n                    <div className={classes.newsItem}>\n                      {data[0]}\n                    </div>\n                    <div>\n                      {data[1]}\n                    </div>\n                  </motion.li>\n                )\n              )\n            }\n          </Typography>\n          \n        </CardContent>\n        {\n          links && links.length > 0 && (\n            <CardActions>\n              {\n                links.map((link, index) => {\n                  return <Button key={`${link[1]}-${index}`} href={link[0]} target=\"_blank\" size=\"small\">{link[1]}</Button>\n                })\n              }\n            </CardActions>\n          )\n        }\n      </Card>\n    </div>\n  );\n}","import React from 'react';\nimport Hidden from '@mui/material/Hidden';\n\nimport { makeStyles } from '@mui/styles';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nimport { sortPosts } from './helper';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport AccountTree from '@mui/icons-material/AccountTree';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Collapse from '@mui/material/Collapse';\nimport {JSONPath} from 'jsonpath-plus';\n\nimport TurnedInIcon from '@mui/icons-material/TurnedIn';\nimport TurnedInNotIcon from '@mui/icons-material/TurnedInNot';\n\nimport {\n  Link, useNavigate\n} from \"react-router-dom\";\n\nimport { parsePostUrl } from './helper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\nimport Divider from '@mui/material/Divider'\nimport { selectSecret, updateSecret } from '../features/secretState';\nimport moment from \"moment\"\nimport {\n  AnimatePresence,\n  motion\n} from 'framer-motion';\nimport { Paper } from '@mui/material';\nconst BLOG = {\n  rightDrawerWidth: 300\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  rightAside: {\n    marginBottom: theme.spacing(1),\n    // borderStyle: 'solid',\n    // borderWidth: 0.2,\n    // borderRadius: theme.shape.borderRadius\n    // paddingLeft: theme.spacing(1),\n    // paddingRight: theme.spacing(1)\n  },\n  // lineageHolder: {\n  //   marginTop: theme.spacing(2)\n  // },\n  lineageList: {\n    maxHeight: 300,\n    overflow: \"scroll\"\n  },\n  passButton: {\n    marginTop: 10\n  }\n}));\n\nfunction SecretPosts() {\n  const getSorted = (a) => {\n    let arr = [...a]\n    arr.sort(function(a,b){\n      // Date(moment(b.created, 'DD-MM-YYYY').format())\n      return moment(b.created, 'DD-MM-YYYY').toDate() - moment(a.created, 'DD-MM-YYYY').toDate()\n    });\n    console.log(arr)\n    return arr\n  }\n  const secretPass = useSelector(selectSecret);\n  const posts = useSelector(getPostsJson);\n\n  const classes = useStyles();  \n\n  const dispatch = useDispatch();\n\n  const [openSecrets, setOpenSecrets] = React.useState(false);\n\n  const [sec, setSec] = React.useState(\"\");\n  const handleClickSecrets = () => {\n    setOpenSecrets(!openSecrets);\n  };\n\n  const handleSecretChange = (e) => {\n    setSec(e.target.value)\n  };\n\n  const updateSecretInStore = (e) => {\n    let s = sec\n    // setSec(\"\");\n    dispatch(updateSecret(s));\n    // updateSecret(s);\n  };\n  let secrets = posts.secrets;\n\n  if (secrets !== undefined) {\n    // secrets.sort(function(a,b){\n    //   // Date(moment(b.created, 'DD-MM-YYYY').format())\n    //   return true;\n    // });\n    \n  }\n  const post = useSelector(selectCurrentPost);\n\n  function calculateLineage() {\n    if(post !== null && post !== undefined && post.lineage !== undefined) {\n      const lineageList = JSONPath({path: `$.posts[?(@.lineage === '${post.lineage}')]`, json: posts});\n      lineageList.sort(sortPosts);\n      return {list: lineageList, id: post.id, name: post.lineage};\n    } else {\n      return {};\n    }\n  }\n\n  const lineageData = calculateLineage();\n\n  return(<div>\n          <TextField value={sec} onChange={handleSecretChange} fullWidth label=\"Know what I know?\"/>\n            {\n              sec != \"\" && \n              <Button onClick={updateSecretInStore} color=\"secondary\" className={classes.passButton} fullWidth variant=\"contained\">Magic</Button>\n            }\n            {\n              sec === \"\" || secrets === undefined || secretPass === undefined || secretPass === \"\" ? (<br/>) : (\n                <div className={classes.lineageHolder}>\n                  <ListItem button onClick={handleClickSecrets}>\n                    <ListItemIcon>\n                      <AccountTree />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Secrets\"} secondary=\"For the intended folks\" />\n                    {openSecrets ? <ExpandLess /> : <ExpandMore />}\n                  </ListItem>\n                  <Collapse in={openSecrets} timeout=\"auto\" unmountOnExit>\n                    <List className={classes.lineageList} dense={true}>\n                      {\n                        getSorted(secrets).map((post, index) => {\n                          return (\n                            <ListItem onClick={() => setSec(\"\")} key={\"lineage-\"+index} component={Link} to={parsePostUrl(post.id, post.title)} selected={post.id === lineageData.id} button>\n                              <ListItemAvatar>\n                                {\n                                  post.id === lineageData.id ?\n                                  <Avatar >\n                                    <TurnedInIcon />\n                                  </Avatar> :\n                                  <Avatar >\n                                    <TurnedInNotIcon />\n                                  </Avatar>  \n\n                                }\n                              </ListItemAvatar>\n                              <ListItemText\n                                primary={post.description}\n                                secondary={post.created}\n                              />\n                            </ListItem>\n                          );\n                        })\n                      }                  \n                    </List>\n                  </Collapse>\n                </div>\n              )\n            }\n  </div>)\n}\n\nfunction RightSidebar(props) {\n  const classes = useStyles();  \n  const posts = useSelector(getPostsJson);\n  const post = useSelector(selectCurrentPost);\n\n  const [open, setOpen] = React.useState(true);\n\n\n  const navigate = useNavigate();\n\n  \n\n  function calculateLineage() {\n    if(post !== null && post !== undefined && post.lineage !== undefined) {\n      const lineageList = JSONPath({path: `$.posts[?(@.lineage === '${post.lineage}')]`, json: posts});\n      lineageList.sort(sortPosts);\n      return {list: lineageList, id: post.id, name: post.lineage};\n    } else {\n      return {};\n    }\n  }\n\n  const lineageData = calculateLineage();\n\n  \n\n  \n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n\n\n  const staticContentVariants = {\n    hidden: {opacity: 0},\n    show: {\n      opacity: 1,\n      transition: {\n        duration: 0.5\n      }\n    }\n  }\n\n  return (\n      <Paper\n        component={motion.div} \n        initial=\"hidden\"\n        animate=\"show\"\n        variants={staticContentVariants}\n        className={classes.rightAside}>\n        \n\n\n        {\n          lineageData.name === undefined ? (<div></div>) : (\n            <div className={classes.lineageHolder}>\n              <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                  <AccountTree />\n                </ListItemIcon>\n                <ListItemText primary={lineageData.name} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List className={classes.lineageList} dense={true}>\n                  {\n                    lineageData.list.map((post, index) => {\n                      return (\n                        <ListItem key={\"lineage-\"+index} onClick={() => {\n                            navigate(parsePostUrl(post.id, post.title))\n                          }} selected={post.id === lineageData.id} button>\n                          <ListItemAvatar>\n                            {\n                              post.id === lineageData.id ?\n                              <Avatar >\n                                <TurnedInIcon />\n                              </Avatar> :\n                              <Avatar >\n                                <TurnedInNotIcon />\n                              </Avatar>  \n\n                            }\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={post.title}\n                            secondary={post.created}\n                          />\n                        </ListItem>\n                      );\n                    })\n                  }                  \n                </List>\n              </Collapse>\n            </div>\n          )\n        }\n        \n          \n        \n\n                  \n      </Paper>\n  );\n}\n\nexport default RightSidebar;\n","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport {\n  AnimatePresence,\n  motion\n} from 'framer-motion';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    // width: 325,\n    // margin: theme.spacing(4),\n    padding: theme.spacing(1)\n  },\n  newsItem: { \n    marginRight: theme.spacing(1),\n    fontWeight: 'bold', \n    color: theme.palette.type === 'dark' ? theme.palette.info.dark : theme.palette.info.light\n  }\n}))\n\nexport default function ImageCard(props) {\n  const classes = useStyles();\n  const [hovered, setHovered] = React.useState(false);\n\n  const { title, text, imageUri, links, index, small } = props\n\n  return (\n    <div\n    className={small ? undefined : classes.card}\n      >\n      <Card\n        key={index}\n        color='primary'\n        layout \n        component={motion.div}\n        whileHover=\"hover\"\n        variants={{\n          hover: {\n            scale: 1.02,\n          }\n        }}\n        onHoverStart={() => setHovered(true)}\n        onHoverEnd={() => setHovered(false)}\n        raised={hovered}\n        \n     \n        >\n          <CardMedia\n            component=\"img\"\n            height=\"220\"\n            image={imageUri}\n            alt={title}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography\n              variant=\"subtitle1\" color=\"text.secondary\">\n              {text}\n            </Typography>\n          </CardContent>\n          {\n            links && links.length > 0 && (\n              <CardActions>\n                {\n                  links.map((link, idx) => {\n                    return <Button key={`${link[1]}-${idx}`} size=\"small\">{link[1]}</Button>\n                  })\n                }\n              </CardActions>\n            )\n          }\n      </Card>\n    </div>\n  );\n}","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Typography } from \"@mui/material\";\n\n// Word wrapper\nconst Wrapper = (props) => {\n  // We'll do this to prevent wrapping of words using CSS\n  return <span className=\"word-wrapper\">{props.children}</span>;\n};\n\n// Map API \"type\" vaules to JSX tag names\nconst tagMap = {\n  paragraph: \"p\",\n  heading1: \"h1\"\n};\n\n// AnimatedCharacters\n// Handles the deconstruction of each word and character to setup for the\n// individual character animations\nconst AnimatedCharacters = (props) => {\n  // Framer Motion variant object, for controlling animation\n  const item = {\n    hidden: {\n      y: \"200%\",\n      transition: { ease: [0.455, 0.03, 0.515, 0.955], duration: 0.85 }\n    },\n    visible: {\n      y: 0,\n      transition: { ease: [0.455, 0.03, 0.515, 0.955], duration: 0.75 }\n    }\n  };\n\n  //  Split each word of props.text into an array\n  const splitWords = props.text.split(\" \");\n\n  // Create storage array\n  const words = [];\n\n  // Push each word into words array\n  for (const [, item] of splitWords.entries()) {\n    words.push(item.split(\"\"));\n  }\n\n  // Add a space (\"\\u00A0\") to the end of each word\n  words.map((word) => {\n    return word.push(\"\\u00A0\");\n  });\n\n  // Get the tag name from tagMap\n  const Tag = tagMap[props.type];\n\n  return (\n    <Tag>\n      {words.map((word, index) => {\n        return (\n          // Wrap each word in the Wrapper component\n          <Wrapper key={index}>\n            {words[index].flat().map((element, index) => {\n              return (\n                <span\n                  style={{\n                    overflow: \"hidden\",\n                    display: \"inline-block\"\n                  }}\n                  key={index}\n                >\n                  <Typography variant=\"h4\" component=\"h1\">\n                    <motion.span\n                      style={{ display: \"inline-block\" }}\n                      variants={item}\n                    >\n                      {element}\n                    </motion.span>\n\n                  </Typography>\n                </span>\n              );\n            })}\n          </Wrapper>\n        );\n      })}\n      {/* {} */}\n    </Tag>\n  );\n};\n\nexport default AnimatedCharacters;\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport {\n    motion\n} from 'framer-motion';\n\nimport AnimatedText from '../components/AnimatedText'\nimport { Link, useLocation } from 'react-router-dom';\n\nimport {\n  SITENAME\n} from '../config'\n\nconst pages = [\n  ['Home', \"/\", false],\n  ['Blog', \"/blog\", false],\n  ['Thesis (coming soon)', \"/thesis\", true]\n];\n\n\nfunction NavBar() {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n\n  const location = useLocation();\n\n  \n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n\n  const container = {\n    visible: {\n      transition: {\n        staggerChildren: 0.04\n      }\n    }\n  }\n\n  return (\n    <AppBar elevation={0} position=\"static\" color=\"transparent\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n\n          <Box sx={{ position: 'relative', top: -5, display: { xs: 'inline-block', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"navbar button\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              \n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem\n                  disabled={page[2]}\n                  key={`nav-${page[1]}`}\n                  component={Link}\n                  to={page[1]}\n                  onClick={handleCloseNavMenu}\n                >\n                  <Typography textAlign=\"center\">{page[0]}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n\n          <motion.div\n            key=\"header-logo\"\n            style={{\n                flexGrow: 1\n            }}\n            className=\"App\"\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={container}\n          >\n            <div className=\"container\">\n              <AnimatedText type=\"heading1\" text={SITENAME} />\n            </div>\n          </motion.div>\n\n\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => {\n              const currPath = location.pathname === page[1]\n              return <Button\n                disabled={page[2]}\n                key={`nav-${page[1]}`}\n                component={Link}\n                to={page[1]}\n                sx={(theme) => { return {my: 2, fontWeight: currPath ? \"bold\" : \"normal\", color: currPath ? 'text.primary' : 'text.secondary'} }}\n              >\n                {page[0]}\n              </Button>\n            })}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default NavBar;","\nimport React, { Suspense } from 'react';\n\n// import Blog from './Blog';\nimport ImageCard from '../components/ImageCard'\nimport TextCard from '../components/TextCard'\nimport NavBar from '../components/NavBar'\nimport { Box, Grid, LinearProgress } from '@mui/material';\nimport { lazyWithPreload } from \"react-lazy-with-preload\";\nimport RightSidebar from '../components/RightSidebar';\nimport {\n  IMAGEURI,\n  USERNAME,\n  ABOUTUSER,\n  GETINTOUCHTEXT,\n  CONTACTLINKS\n} from '../config'\n\nimport {\n  Outlet,\n  Route,\n  Routes,\n  useLocation,\n  HashRouter\n} from \"react-router-dom\";\nimport { Container } from '@mui/system';\nimport { AnimatePresence } from 'framer-motion';\n// import Home from './Home';\n\nconst Blog = lazyWithPreload(() => import(\"./Blog\"));\nconst Home = lazyWithPreload(() => import(\"./Home\"));\nconst PostPage = lazyWithPreload(() => import(\"./PostPage\"));\n\nfunction Layout(props) {\n  const location = useLocation();\n  const isMain = location.pathname === \"/\"\n  const isBlog = location.pathname === \"/blog\"\n  return(\n    <React.Fragment>\n\n      <NavBar />\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={isMain ? 6 : 4} md={4} lg={isMain ? 3 : 2}>\n\n            {\n              !isMain && \n              <RightSidebar />\n            }\n            <Box\n              sx={{ display: { xs: isMain || isBlog ? 'block' : 'none', md: 'block' } }}\n              >\n              <ImageCard\n                index=\"main-image\"\n                imageUri={IMAGEURI}\n                title={USERNAME} \n                text={isMain ? ABOUTUSER : GETINTOUCHTEXT}\n                links={isMain ? undefined : CONTACTLINKS}\n                small={!isMain}\n                />\n            </Box>\n\n\n            {\n              isMain && \n              <TextCard \n                index=\"main-infocard\"\n                title=\"Get it touch?\" \n                text={GETINTOUCHTEXT}\n                links={CONTACTLINKS}\n              />\n            }\n\n          </Grid>\n          <Grid item xs={12} sm={isMain ? 6 : 8} md={8} lg={9}>\n            <Suspense fallback={<LinearProgress color=\"success\"/>}>\n              {/* <AnimatePresence initial={false}> */}\n                <Routes location={location} key={location.pathname}>\n                  <Route\n                    path=\"/\"\n                    element={<Home preloadList={[Blog, PostPage]} />}\n                  />\n                  <Route path=\"/blog\" element={<Blog preloadList={[Home, PostPage]} />}>\n                  </Route>\n                  <Route path=\"/blog/:idRaw\" element={<PostPage preloadList={[Home, Blog]} />}/>\n                </Routes>\n              {/* </AnimatePresence> */}\n            </Suspense>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n      \n  );\n}\n\n\nfunction RoutingWrapper() {\n  return(\n    <HashRouter>\n      <Layout />\n    </HashRouter>\n  )\n}\n\nexport default RoutingWrapper;\n","import { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nconst useFetch = (url, other = {}) => {\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(url, other)\n      .then(function (response) {\n        setResponse(response);\n      })\n      .catch(function (error) {\n        setError(error)\n        console.warn(\"FetchHook: \", error);\n      })\n      .finally(() => {\n        setLoading(false);\n      })\n  }, [url]);\n  return { response, loading, error };\n};\n\nexport default useFetch;","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@mui/styles';\n\nimport { nonCachedRequest, sortPosts } from './components/helper';\nimport Layout from './pages/Layout';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport { URI_POSTS } from './config';\nimport { createTheme } from '@mui/material/styles';\n\n\nimport { updatePostsJson } from './features/allPostsSlice';\nimport { useDispatch } from 'react-redux';\n\nimport './App.css';\n\nimport { CssBaseline, } from '@mui/material';\nimport { Alert, Container, responsiveFontSizes, ScopedCssBaseline } from '@mui/material';\nimport { blueGrey } from '@mui/material/colors';\nimport useFetch from './hooks/useFetch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    overflow: \"scroll\",\n  },\n\n}));\n\nconst uniqueReq = nonCachedRequest(URI_POSTS)\nfunction MainContainer(props) {\n  // Hooks\n  const classes = useStyles();  \n  const dispatch = useDispatch();\n  const { loading, response, error } = useFetch(uniqueReq)\n\n  // States\n  const [alert, setAlert] = useState(null);\n  \n  // Effects\n  useEffect(() => {\n    const getAlertData = () => {\n      if (loading) {\n        return [\"info\", \"Loading posts\"]\n      }\n      if (error) {\n        return [\"error\", \"Failed to load posts\"]\n      }\n      if (response) {\n        dispatch(updatePostsJson(response.data));\n        return [\"success\", \"Posts loaded\"]\n      }\n    }\n    setAlert(getAlertData())\n    const timer = setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n    \n    return () => {\n      clearTimeout(timer)\n    };\n  }, [loading])\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n        <main className={classes.root}>\n          <Layout />\n        </main>\n        {\n          alert && \n          <Alert \n            sx={{\n              position: 'fixed',\n              bottom: 0,\n              right: 0,\n              left: 0\n            }}\n            severity={alert[0]}>\n              {alert[1]}\n          </Alert>\n        }\n    </React.Fragment>\n  );\n}\n\nfunction App(props) {\n  const [light, setLight] = React.useState(false);\n\n\n  const themeLight = createTheme({\n    palette: {\n      mode: 'light',\n      background: {\n        paper: blueGrey[50],\n        default: blueGrey[100]\n      }\n    }\n  });\n  \n  const themeDark = createTheme({\n    palette: {\n      mode: 'dark'\n    } \n  });\n\n  let theme = light ? themeLight : themeDark\n\n  theme = responsiveFontSizes(theme);\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ScopedCssBaseline enableColorScheme>\n        <MainContainer/>\n      </ScopedCssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const sidebarSlice = createSlice({\n  name: 'sidebarState',\n  initialState: {\n    mobileVisible: false\n  },\n  reducers: {\n    updateVisiblity: (state, action) => {\n      state.mobileVisible = action.payload;\n    },\n\n  }\n});\n\nexport const { updateVisiblity } = sidebarSlice.actions;\nexport const selectVisiblity = (state) => state.sidebarState.mobileVisible;\n\nexport default sidebarSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\n\nimport postsJsonReducer from './features/allPostsSlice';\nimport currentSliceReducer from './features/currentPostSlice';\nimport sidebarState from './features/sidebarState';\nimport secretState from './features/secretState';\n\nexport default configureStore({\n  reducer: {\n    postsJson: postsJsonReducer,\n    currentPost: currentSliceReducer,\n    sidebarState: sidebarState,\n    secretState: secretState\n  }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","export const URI_POSTS = \"/posts/posts.json\"\nexport const URI_POST_FILES = \"/posts/\"\n\nexport const SITENAME = \"Hello World\";\nexport const IMAGEURI = \"/blog-pic.webp\";\nexport const USERNAME = \"Meetesh Kalpesh Mehta\";\nexport const ABOUTUSER = \"Hey there! I'm a research scholar @IIT Mandi working in the area of compilers.My latest work focuses on a JIT compiler for the R Programming Language where I tackle the problems of warmup times and deoptimization overheads. I also love to code in React, like this website. Apart from computers I also tinker a lot with Raspberry Pi's, Arduinos, etc in my free time.\";\n\nexport const GETINTOUCHTEXT = \"Feel free to get in touch with me regarding anything :) [meeteshmehta4@gmail.com]\";\nexport const CONTACTLINKS = [\n  [\"mailto:meeteshmehta4@gmail.com\",\"Email\"],\n  [\"https://www.linkedin.com/in/meetesh06/\",\"LinkedIn\"],\n];\n\nexport const NEWSITEMS = [\n  [\"3rd Feb 2023\", \"Presented Synopsis Seminar\"],\n  [\"29th Nov 2022\", \"Presented Open Seminar\"],\n  [\"29th Oct 2022\", \"Submitted to OOPSLA 2023\"],\n  // [\"15th Feb 2021\", \"Joined IIT Mandi\"]\n];\n\nexport const INTERESTS = \"I love to go out on long walks and hikes. You will find me listening to music or reading books/articles in my free time. I randomly start new personal projects like making a light controllers using arduino, setting up solar panels around the terrace and so on. If something piques my interest I will give it a shot.\"\n\nexport const SKILLSTEXT = \"I find myself comfortable in\"\n\nexport const SKILLSITEMS = [\n  [\"C, C++, Java\", \"Experience in large real world projects\"],\n  [\"React/Native, JS, R\", \"A lot of fun projects like this site. Worked on a JIT compiler for R called Rsh.\"],\n  [\"Scripting\", \"Routinely use scripting languages like python, bash, JS, etc.\"],\n  [\"Databases\", \"Am comfortable in mongo, SQL, etc.\"],\n  [\"Teaching Assistant\", \"CS502 Compiler Design, C302 Paradigms of Programming\"],\n]\n\nexport const LOOKINGFORTEXT =\"Internship opportunities as a Researcher\"\n\nexport const QUOTE = \"Logic processed infinitely is emotion.\"\n\nexport const RESEARCHINTERESTS = \"Compilers, JITs, Programming Languages, Security\"\n\nexport const EDUCATION = [\n  [\"2020-2023: M.S (by Research) CSE\", \"IIT Mandi School of Computing and Electrical Engineering\"],\n  [\"2020: GATE CSE\", \"Cleared GATE examination.\"],\n  [\"2016-2020: B.Tech CSE\", \"MRIIRS, NCR-Faridabad\"],\n  [\"2014-2016: High School\", \"Sri Gayatri Junior College, Hyderabad\"],\n  [\"2004-2014: Primary School\", \"Bharatiya Vidya Bhavans Public School, Hyderabad\"],\n]\n\nexport const ABOUTME = \"I absolutely love everything about computers and love to dive deeper into what makes them tick. I find myself comfortable in very high level abstractions like DSLs or React and also in low level things like code generation, assembly, C++.\"\n","const parsePostUrl = (id, title) => {\n  return '/blog/'+id+'-'+title;\n}\n\nconst nonCachedRequest = (url) => {\n  return url+'?timestamp='+new Date().getTime();\n  // return url;\n}\n\nfunction sortPosts(a, b) {\n  return new Date(b.created).getTime() - new Date(a.created).getTime();\n}\n\nexport { parsePostUrl, nonCachedRequest, sortPosts }\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const allPostsSlice = createSlice({\n  name: 'postsJson',\n  initialState: {\n    postsJson: {}\n  },\n  reducers: {\n    updatePostsJson: (state, action) => {\n      // console.log(\"updatePostsJson\", action.payload);\n      state.postsJson = action.payload;\n    }\n  }\n});\n\nexport const { updatePostsJson } = allPostsSlice.actions;\nexport const getPostsJson = (state) => state.postsJson.postsJson;\n\nexport default allPostsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const currentSlice = createSlice({\n  name: 'currentPost',\n  initialState: {\n    currentPost: null\n  },\n  reducers: {\n    updateCurrentPost: (state, action) => {\n      state.currentPost = action.payload;\n    },\n\n  }\n});\n\nexport const { updateCurrentPost } = currentSlice.actions;\nexport const selectCurrentPost = (state) => state.currentPost.currentPost;\n\nexport default currentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const secretSlice = createSlice({\n  name: 'secretState',\n  initialState: {\n    secret: undefined\n  },\n  reducers: {\n    updateSecret: (state, action) => {\n      state.secret = action.payload;\n    },\n\n  }\n});\n\nexport const { updateSecret } = secretSlice.actions;\nexport const selectSecret = (state) => state.secretState.secret;\n\nexport default secretSlice.reducer;"],"sourceRoot":""}
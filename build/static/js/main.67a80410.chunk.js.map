{"version":3,"sources":["components/helper.js","features/currentPostSlice.js","features/allPostsSlice.js","components/SelectedPost.js","components/PostCard.js","components/TextCard.js","components/PostsContainer.js","features/sidebarState.js","components/SearchableActionBar.js","components/ImageCard.js","config.js","features/secretState.js","components/RightSidebar.js","components/PostPage.js","components/AnimatedText.js","components/NavBar.js","pages/HomeContent.js","App.js","store.js","index.js"],"names":["parsePostUrl","id","title","nonCachedRequest","url","Date","getTime","sortPosts","a","b","created","currentSlice","createSlice","name","initialState","currentPost","reducers","updateCurrentPost","state","action","payload","actions","selectCurrentPost","allPostsSlice","postsJson","updatePostsJson","getPostsJson","makeStyles","theme","root","marginLeft","spacing","marginRight","marginTop","date","fontWeight","typography","fontWeightBold","fontSize","pxToRem","color","textDate","postContainer","width","skeletonContainer","cardPostTitle","cardPostDesc","fontWeightRegular","heading","LatestPost","useStyles","card","newsItem","palette","type","primary","light","dark","PostCard","props","classes","post","React","hovered","setHovered","className","Card","layout","component","motion","div","whileHover","variants","hover","scale","onHoverStart","onHoverEnd","raised","CardActionArea","Link","to","CardContent","Typography","variant","gutterBottom","description","padding","TextCard","text","links","textList","index","listItem","hidden","opacity","show","ul","transition","staggerChildren","initial","animate","style","map","data","li","listStyle","length","CardActions","link","Button","href","target","size","tabContainer","breakpoints","down","maxWidth","PostsContainer","useState","blogData","useSelector","Hidden","mdUp","Divider","sx","marginBottom","Masonry","columns","xs","sm","md","lg","posts","sidebarSlice","mobileVisible","updateVisiblity","actionBar","SearchableActionBar","info","ImageCard","imageUri","small","undefined","CardMedia","height","image","alt","idx","GETINTOUCHTEXT","CONTACTLINKS","NEWSITEMS","SKILLSITEMS","EDUCATION","secretSlice","secret","updateSecret","selectSecret","secretState","lineageList","maxHeight","overflow","passButton","RightSidebar","open","setOpen","navigate","useNavigate","lineageData","lineage","JSONPath","path","json","sort","list","calculateLineage","mdDown","implementation","Paper","duration","rightAside","lineageHolder","ListItem","button","onClick","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","List","dense","selected","ListItemAvatar","Avatar","secondary","paper","minHeight","fontFamily","textDecoration","divider","categoryName","dateHolder","display","alignItems","dateStyle","fontWeightLight","markdownHolder","markdownImage","loader","alignSelf","LoadingHeader","postMetaData","Chip","label","category","HomeContent","idRaw","useParams","split","dispatch","useDispatch","loadingPost","setLoadingPost","setPostMetaData","postData","setPostData","found","setFound","secretPass","smoothLoadingEnd","useEffect","meta","axios","get","URI_POST_FILES","then","response","Crypto","AES","decrypt","toString","enc","Utf8","lines","splice","newtext","join","catch","err","finally","renderPostFromLink","msg","renderers","math","value","block","inlineMath","code","language","wrapLongLines","wrapLines","coldarkDark","children","pageVariants","y","out","FadeIn","FadeOut","pageTransitions","LinearProgress","exit","Tooltip","aria-label","arrow","IconButton","mode","elevation","plugins","Skeleton","borderRadius","Wrapper","tagMap","paragraph","heading1","AnimatedCharacters","item","ease","visible","splitWords","words","entries","push","word","Tag","flat","element","span","pages","NavBar","anchorElNav","setAnchorElNav","location","useLocation","handleCloseNavMenu","AppBar","position","Container","Toolbar","disableGutters","Box","top","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","onClose","page","MenuItem","disabled","textAlign","flexGrow","AnimatedText","currPath","pathname","my","staticContentVariants","PostRenderer","PostPage","BlogRenderer","container","styled","backgroundColor","body2","StaticContent","isMain","Grid","HomeWrapper","content","flexDirection","mainContent","flex","MainContainer","alert","setAlert","setTimeout","error","console","log","Fragment","CssBaseline","Alert","bottom","severity","App","themeLight","createTheme","background","yellow","default","grey","themeDark","ThemeProvider","ScopedCssBaseline","enableColorScheme","configureStore","reducer","postsJsonReducer","currentSliceReducer","sidebarState","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.67a80410.chunk.js","sourcesContent":["const parsePostUrl = (id, title) => {\n  return '/blog/'+id+'-'+title;\n}\n\nconst nonCachedRequest = (url) => {\n  return url+'?timestamp='+new Date().getTime();\n  // return url;\n}\n\nfunction sortPosts(a, b) {\n  return new Date(b.created).getTime() - new Date(a.created).getTime();\n}\n\nexport { parsePostUrl, nonCachedRequest, sortPosts }\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const currentSlice = createSlice({\n  name: 'currentPost',\n  initialState: {\n    currentPost: null\n  },\n  reducers: {\n    updateCurrentPost: (state, action) => {\n      state.currentPost = action.payload;\n    },\n\n  }\n});\n\nexport const { updateCurrentPost } = currentSlice.actions;\nexport const selectCurrentPost = (state) => state.currentPost.currentPost;\n\nexport default currentSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const allPostsSlice = createSlice({\n  name: 'postsJson',\n  initialState: {\n    postsJson: {}\n  },\n  reducers: {\n    updatePostsJson: (state, action) => {\n      // console.log(\"updatePostsJson\", action.payload);\n      state.postsJson = action.payload;\n    }\n  }\n});\n\nexport const { updatePostsJson } = allPostsSlice.actions;\nexport const getPostsJson = (state) => state.postsJson.postsJson;\n\nexport default allPostsSlice.reducer;","import React from 'react';\n\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport { makeStyles } from '@mui/styles';\n\nimport { useSelector } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\n\nimport { parsePostUrl } from './helper';\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(2),\n  },\n  date: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.textDate,\n    marginTop: theme.spacing(2)\n  },\n  postContainer: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  skeletonContainer: {\n    marginTop: theme.spacing(2),\n  },\n  cardPostTitle: {\n    fontWeight: theme.typography.fontWeightBold\n  },\n  cardPostDesc: {\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(13)\n  },\n  heading: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(25)\n  }\n}));\n\n\n\nfunction LatestPost(props) {\n  const classes = useStyles();\n  let post = useSelector(selectCurrentPost);\n  let postLatest = useSelector(getPostsJson);\n  if (postLatest) {\n    postLatest = postLatest.posts[0];\n  }\n\n  return(\n    <div className={classes.root}>\n      {\n        post && \n        <div>\n          <Typography className={classes.heading} variant=\"h6\" component=\"h2\">\n            Selected Post\n          </Typography>\n          <Card className={classes.postContainer}>\n            <CardActionArea component={Link} to={parsePostUrl(post.id, post.title)}>\n              <CardContent>\n                <Typography className={classes.cardPostTitle} gutterBottom variant=\"h5\" component=\"h2\">\n                  {post.title}\n                </Typography>\n                <Typography className={classes.cardPostDesc} variant=\"body2\" component=\"p\">\n                  {post.description} \n                </Typography>\n                <Typography className={classes.date}>\n                  {post.created}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default LatestPost;\n","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@mui/styles';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport { useTheme } from '@emotion/react';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { parsePostUrl } from './helper';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    // width: 325,\n    // padding: theme.spacing(1),\n    // paddingTop: 0,\n    // paddingBottom: theme.spacing(2)\n  },\n  newsItem: { \n    marginRight: theme.spacing(1),\n    fontWeight: 'bold', \n    color: theme.palette.type === 'dark' ? theme.palette.primary.light : theme.palette.primary.dark\n  }\n}))\n\nexport default function PostCard(props) {\n  const classes = useStyles();\n  const { post } = props\n  const [hovered, setHovered] = React.useState(false);\n\n  const listContainer = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2\n        // staggerDirection: -1\n      }\n    }\n  }\n\n  const listItem = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 }\n  }\n  \n  return (\n    <div className={classes.card} >\n\n      <Card\n        layout \n        component={motion.div}\n        whileHover=\"hover\"\n        variants={{\n          hover: {\n            scale: 1.02,\n          }\n        }}\n        // style={{ paddingBottom: 50 }}\n        onHoverStart={() => setHovered(true)}\n        onHoverEnd={() => setHovered(false)}\n        raised={hovered}\n        >\n          <CardActionArea\n            component={Link}\n            to={parsePostUrl(post.id, post.title)}\n          >\n            <CardContent>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                  {post.created}\n              </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {post.title}\n              </Typography>\n              <Typography variant=\"body\" color=\"text.secondary\">\n                  {post.description}\n              </Typography>\n            </CardContent>\n\n          </CardActionArea>\n      </Card>\n    </div>\n  );\n}","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@mui/styles';\nimport { Button, CardActions } from '@mui/material';\nimport { useTheme } from '@emotion/react';\nimport { motion } from 'framer-motion';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    // width: 325,\n    padding: theme.spacing(1)\n  },\n  newsItem: { \n    marginRight: theme.spacing(1),\n    fontWeight: 'bold', \n    color: theme.palette.type === 'dark' ? theme.palette.primary.light : theme.palette.primary.dark\n  }\n}))\n\nexport default function TextCard(props) {\n  const classes = useStyles();\n  const { title, text, links, textList, index } = props\n  const [hovered, setHovered] = React.useState(false);\n\n  const listContainer = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2\n        // staggerDirection: -1\n      }\n    }\n  }\n\n  const listItem = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 }\n  }\n  \n  return (\n    <div className={classes.card} >\n\n      <Card\n        key={index}\n        layout \n        component={motion.div}\n        whileHover=\"hover\"\n        variants={{\n          hover: {\n            scale: 1.02,\n          }\n        }}\n        // style={{ paddingBottom: 50 }}\n        onHoverStart={() => setHovered(true)}\n        onHoverEnd={() => setHovered(false)}\n        raised={hovered}\n        \n        >\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {title}\n          </Typography>\n          <Typography variant=\"body\" color=\"text.secondary\">\n              {\n              text && text\n              }\n          </Typography>\n          <Typography \n            component={motion.ul}\n            variants={listContainer}\n            initial=\"hidden\"\n            animate=\"show\"\n            variant=\"body\"\n            style={{\n              padding: 0\n            }}\n            color=\"text.secondary\">\n            {\n              textList && (\n                textList.map((data,index) => \n                  <motion.li key={`${data[0]}-${index}`} style={{listStyle: 'none'}} variants={listItem}>\n                    <div className={classes.newsItem}>\n                      {data[0]}\n                    </div>\n                    <div>\n                      {data[1]}\n                    </div>\n                  </motion.li>\n                )\n              )\n            }\n          </Typography>\n          \n        </CardContent>\n        {\n          links && links.length > 0 && (\n            <CardActions>\n              {\n                links.map((link, index) => {\n                  return <Button key={`${link[1]}-${index}`} href={link[0]} target=\"_blank\" size=\"small\">{link[1]}</Button>\n                })\n              }\n            </CardActions>\n          )\n        }\n      </Card>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@mui/styles';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { Divider, Hidden, Skeleton, Typography } from '@mui/material';\nimport {JSONPath} from 'jsonpath-plus';\nimport PostCard from './PostCard';\n\nimport { useSelector } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\nimport { Masonry } from '@mui/lab';\nimport { motion } from 'framer-motion';\nimport TextCard from './TextCard';\nimport { blueGrey } from '@mui/material/colors';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \n  },\n  tabContainer: {\n    [theme.breakpoints.down('lg')]: {\n      maxWidth: \"60vw\"\n    },\n    maxWidth: \"40vw\"\n  }\n  \n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction PostsContainer(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const blogData = useSelector(getPostsJson);\n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div >\n    <Hidden mdUp>\n      {/* Posts */}\n      <Divider sx={(theme) => { return { marginBottom: theme.spacing(1), marginTop: theme.spacing(1) } }}/>\n      {/* <Typography sx={(theme) => { return { marginTop: theme.spacing(2) } }} gutterBottom variant=\"h\" >\n        Posts\n      </Typography> */}\n    </Hidden>\n    <Masonry \n      // sx={(theme) => { return { backgroundColor: blueGrey[700] } }}\n      columns={{ xs: 1, sm: 2, md: 3, lg: 3 }}\n      spacing={2}\n      >\n        {\n          blogData.posts.map((post, index) => (\n            <PostCard key={`post-${index}`} post={post}/>\n          ))\n        }\n      </Masonry>\n      </div>\n      );\n    // <div className={classes.root}>\n    //   <div>\n    //       <div className={classes.tabContainer}>\n    //         <Tabs\n    //           variant=\"scrollable\"\n    //           scrollButtons\n    //           value={value}\n    //           onChange={handleChange}\n    //           aria-label=\"lineage selector\"\n    //           allowScrollButtonsMobile>\n    //           {\n    //             blogData.categories.map((label, index) => (\n    //               <Tab key={index+\"tab-section\"} label={label} {...a11yProps(index)} />\n    //             ))\n    //           }\n    //         </Tabs>\n    //       </div>\n    //     {\n    //       blogData.categories.map((label, index) => {\n    //         return (\n    //           <TabPanel value={value} index={index} key={index+\"tab\"}>\n    //             <Grid container spacing={0}>\n    //               {\n    //                 JSONPath({path: `$.posts[?(@.category === '${label}')]`, json: blogData}).map((post) => (\n    //                   <Grid item xs={12} sm={4} key={post.id}>\n    //                     <PostCard post={post}/>\n    //                   </Grid>\n    //                 ))\n    //               }\n    //             </Grid>\n    //           </TabPanel>\n    //         );\n    //       })\n    //     }\n\n\n    //   </div>\n    // </div>\n  // );\n}\n\nexport default PostsContainer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const sidebarSlice = createSlice({\n  name: 'sidebarState',\n  initialState: {\n    mobileVisible: false\n  },\n  reducers: {\n    updateVisiblity: (state, action) => {\n      state.mobileVisible = action.payload;\n    },\n\n  }\n});\n\nexport const { updateVisiblity } = sidebarSlice.actions;\nexport const selectVisiblity = (state) => state.sidebarState.mobileVisible;\n\nexport default sidebarSlice.reducer;","\nimport React from 'react';\nimport { makeStyles } from '@mui/styles';\n\nimport Hidden from '@mui/material/Hidden';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nimport TextField from '@mui/material/TextField';\nimport { Autocomplete } from '@mui/material';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPostsJson } from '../features/allPostsSlice';\nimport { updateCurrentPost } from '../features/currentPostSlice';\nimport { selectVisiblity, updateVisiblity } from '../features/sidebarState';\n\nconst useStyles = makeStyles((theme) => ({\n  actionBar: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3)\n  }\n}));\n\n\nfunction SearchableActionBar(props) {\n  const classes = useStyles();\n\n  const { posts } = useSelector(getPostsJson);\n  const toggle =  useSelector(selectVisiblity);\n  const dispatch = useDispatch();\n\n  const handleUpdate = (event, newValue) => {\n    if(newValue === null) return;\n    let index = parseInt(newValue.split(\" >\")[0]);\n    dispatch(updateCurrentPost(posts[index]));\n  }\n\n  return (\n    <div className={classes.actionBar}>\n      {\n        posts &&\n        <Autocomplete\n          freeSolo\n          onChange={handleUpdate}          \n          options={posts.map((option, index) => index + ' > ' + option.title)}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Search Posts\" margin=\"normal\" variant=\"outlined\" />\n          )}\n        />\n      }\n    </div>\n  );\n}\n\nexport default SearchableActionBar;\n","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport {\n  AnimatePresence,\n  motion\n} from 'framer-motion';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    // width: 325,\n    // margin: theme.spacing(4),\n    padding: theme.spacing(1)\n  },\n  newsItem: { \n    marginRight: theme.spacing(1),\n    fontWeight: 'bold', \n    color: theme.palette.type === 'dark' ? theme.palette.info.dark : theme.palette.info.light\n  }\n}))\n\nexport default function ImageCard(props) {\n  const classes = useStyles();\n  const [hovered, setHovered] = React.useState(false);\n\n  const { title, text, imageUri, links, index, small } = props\n\n  return (\n    <div\n    className={small ? undefined : classes.card}\n      >\n      <Card\n        key={index}\n        color='primary'\n        layout \n        component={motion.div}\n        whileHover=\"hover\"\n        variants={{\n          hover: {\n            scale: 1.02,\n          }\n        }}\n        onHoverStart={() => setHovered(true)}\n        onHoverEnd={() => setHovered(false)}\n        raised={hovered}\n        \n     \n        >\n          <CardMedia\n            component=\"img\"\n            height=\"220\"\n            image={imageUri}\n            alt={title}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography\n              variant=\"subtitle1\" color=\"text.secondary\">\n              {text}\n            </Typography>\n          </CardContent>\n          {\n            links && links.length > 0 && (\n              <CardActions>\n                {\n                  links.map((link, idx) => {\n                    return <Button key={`${link[1]}-${idx}`} size=\"small\">{link[1]}</Button>\n                  })\n                }\n              </CardActions>\n            )\n          }\n      </Card>\n    </div>\n  );\n}","export const URI_POSTS = \"/posts/posts.json\"\nexport const URI_POST_FILES = \"/posts/\"\n\nexport const SITENAME = \"Hello World\";\nexport const IMAGEURI = \"/blog-pic.jpg\";\nexport const USERNAME = \"Meetesh Kalpesh Mehta\";\nexport const ABOUTUSER = \"Hey there! I'm a research scholar @IIT Mandi working in the area of compilers.My latest work focuses on a JIT compiler for the R Programming Language where I tackle the problems of warmup times and deoptimization overheads. I also love to code in React, like this website. Apart from computers I also tinker a lot with Raspberry Pi's, Arduinos, etc in my free time.\";\n\nexport const GETINTOUCHTEXT = \"Feel free to get in touch with me regarding anything :) [meeteshmehta4@gmail.com]\";\nexport const CONTACTLINKS = [\n  [\"mailto:meeteshmehta4@gmail.com\",\"Email\"],\n  [\"https://www.linkedin.com/in/meetesh06/\",\"LinkedIn\"],\n];\n\nexport const NEWSITEMS = [\n  [\"3rd Feb 2023\", \"Presented Synopsis Seminar\"],\n  [\"29th Nov 2022\", \"Presented Open Seminar\"],\n  [\"29th Oct 2022\", \"Submitted to OOPSLA 2023\"],\n  // [\"15th Feb 2021\", \"Joined IIT Mandi\"]\n];\n\nexport const INTERESTS = \"I love to go out on long walks and hikes. You will find me listening to music or reading books/articles in my free time. I randomly start new personal projects like making a light controllers using arduino, setting up solar panels around the terrace and so on. If something piques my interest I will give it a shot.\"\n\nexport const SKILLSTEXT = \"I find myself comfortable in\"\n\nexport const SKILLSITEMS = [\n  [\"C, C++, Java\", \"Experience in large real world projects\"],\n  [\"React/Native, JS, R\", \"A lot of fun projects like this site. Worked on a JIT compiler for R called Rsh.\"],\n  [\"Scripting\", \"Routinely use scripting languages like python, bash, JS, etc.\"],\n  [\"Databases\", \"Am comfortable in mongo, SQL, etc.\"],\n  [\"Teaching Assistant\", \"CS502 Compiler Design, C302 Paradigms of Programming\"],\n]\n\nexport const LOOKINGFORTEXT =\"Internship opportunities as a Researcher\"\n\nexport const QUOTE = \"Logic processed infinitely is emotion.\"\n\nexport const RESEARCHINTERESTS = \"Compilers, JITs, Programming Languages, Security\"\n\nexport const EDUCATION = [\n  [\"2020-2023: M.S (by Research) CSE\", \"IIT Mandi School of Computing and Electrical Engineering\"],\n  [\"2020: GATE CSE\", \"Cleared GATE examination.\"],\n  [\"2016-2020: B.Tech CSE\", \"MRIIRS, NCR-Faridabad\"],\n  [\"2014-2016: High School\", \"Sri Gayatri Junior College, Hyderabad\"],\n  [\"2004-2014: Primar School\", \"Bharatiya Vidya Bhavans Public School, Hyderabad\"],\n]\n\nexport const ABOUTME = \"I absolutely love everything about computers and love to dive deeper into what makes them tick. I find myself comfortable in very high level abstractions like DSLs or React and also in low level things like code generation, assembly, C++.\"\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const secretSlice = createSlice({\n  name: 'secretState',\n  initialState: {\n    secret: undefined\n  },\n  reducers: {\n    updateSecret: (state, action) => {\n      state.secret = action.payload;\n    },\n\n  }\n});\n\nexport const { updateSecret } = secretSlice.actions;\nexport const selectSecret = (state) => state.secretState.secret;\n\nexport default secretSlice.reducer;","import React from 'react';\nimport Hidden from '@mui/material/Hidden';\n\nimport { makeStyles } from '@mui/styles';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nimport { sortPosts } from './helper';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport AccountTree from '@mui/icons-material/AccountTree';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Collapse from '@mui/material/Collapse';\nimport {JSONPath} from 'jsonpath-plus';\n\nimport TurnedInIcon from '@mui/icons-material/TurnedIn';\nimport TurnedInNotIcon from '@mui/icons-material/TurnedInNot';\n\nimport {\n  Link, useNavigate\n} from \"react-router-dom\";\n\nimport { parsePostUrl } from './helper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\nimport Divider from '@mui/material/Divider'\nimport { selectSecret, updateSecret } from '../features/secretState';\nimport moment from \"moment\"\nimport {\n  AnimatePresence,\n  motion\n} from 'framer-motion';\nimport { Paper } from '@mui/material';\nconst BLOG = {\n  rightDrawerWidth: 300\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  // rightAside: {\n  //   borderStyle: 'solid',\n  //   borderWidth: 0.2,\n  //   borderRadius: theme.shape.borderRadius\n  //   // paddingLeft: theme.spacing(1),\n  //   // paddingRight: theme.spacing(1)\n  // },\n  // lineageHolder: {\n  //   marginTop: theme.spacing(2)\n  // },\n  lineageList: {\n    maxHeight: 300,\n    overflow: \"scroll\"\n  },\n  passButton: {\n    marginTop: 10\n  }\n}));\n\nfunction SecretPosts() {\n  const getSorted = (a) => {\n    let arr = [...a]\n    arr.sort(function(a,b){\n      // Date(moment(b.created, 'DD-MM-YYYY').format())\n      return moment(b.created, 'DD-MM-YYYY').toDate() - moment(a.created, 'DD-MM-YYYY').toDate()\n    });\n    console.log(arr)\n    return arr\n  }\n  const secretPass = useSelector(selectSecret);\n  const posts = useSelector(getPostsJson);\n\n  const classes = useStyles();  \n\n  const dispatch = useDispatch();\n\n  const [openSecrets, setOpenSecrets] = React.useState(false);\n\n  const [sec, setSec] = React.useState(\"\");\n  const handleClickSecrets = () => {\n    setOpenSecrets(!openSecrets);\n  };\n\n  const handleSecretChange = (e) => {\n    setSec(e.target.value)\n  };\n\n  const updateSecretInStore = (e) => {\n    let s = sec\n    // setSec(\"\");\n    dispatch(updateSecret(s));\n    // updateSecret(s);\n  };\n  let secrets = posts.secrets;\n\n  if (secrets !== undefined) {\n    // secrets.sort(function(a,b){\n    //   // Date(moment(b.created, 'DD-MM-YYYY').format())\n    //   return true;\n    // });\n    \n  }\n  const post = useSelector(selectCurrentPost);\n\n  function calculateLineage() {\n    if(post !== null && post !== undefined && post.lineage !== undefined) {\n      const lineageList = JSONPath({path: `$.posts[?(@.lineage === '${post.lineage}')]`, json: posts});\n      lineageList.sort(sortPosts);\n      return {list: lineageList, id: post.id, name: post.lineage};\n    } else {\n      return {};\n    }\n  }\n\n  const lineageData = calculateLineage();\n\n  return(<div>\n          <TextField value={sec} onChange={handleSecretChange} fullWidth label=\"Know what I know?\"/>\n            {\n              sec != \"\" && \n              <Button onClick={updateSecretInStore} color=\"secondary\" className={classes.passButton} fullWidth variant=\"contained\">Magic</Button>\n            }\n            {\n              sec === \"\" || secrets === undefined || secretPass === undefined || secretPass === \"\" ? (<br/>) : (\n                <div className={classes.lineageHolder}>\n                  <ListItem button onClick={handleClickSecrets}>\n                    <ListItemIcon>\n                      <AccountTree />\n                    </ListItemIcon>\n                    <ListItemText primary={\"Secrets\"} secondary=\"For the intended folks\" />\n                    {openSecrets ? <ExpandLess /> : <ExpandMore />}\n                  </ListItem>\n                  <Collapse in={openSecrets} timeout=\"auto\" unmountOnExit>\n                    <List className={classes.lineageList} dense={true}>\n                      {\n                        getSorted(secrets).map((post, index) => {\n                          return (\n                            <ListItem onClick={() => setSec(\"\")} key={\"lineage-\"+index} component={Link} to={parsePostUrl(post.id, post.title)} selected={post.id === lineageData.id} button>\n                              <ListItemAvatar>\n                                {\n                                  post.id === lineageData.id ?\n                                  <Avatar >\n                                    <TurnedInIcon />\n                                  </Avatar> :\n                                  <Avatar >\n                                    <TurnedInNotIcon />\n                                  </Avatar>  \n\n                                }\n                              </ListItemAvatar>\n                              <ListItemText\n                                primary={post.description}\n                                secondary={post.created}\n                              />\n                            </ListItem>\n                          );\n                        })\n                      }                  \n                    </List>\n                  </Collapse>\n                </div>\n              )\n            }\n  </div>)\n}\n\nfunction RightSidebar(props) {\n  const classes = useStyles();  \n  const posts = useSelector(getPostsJson);\n  const post = useSelector(selectCurrentPost);\n\n  const [open, setOpen] = React.useState(true);\n\n\n  const navigate = useNavigate();\n\n  \n\n  function calculateLineage() {\n    if(post !== null && post !== undefined && post.lineage !== undefined) {\n      const lineageList = JSONPath({path: `$.posts[?(@.lineage === '${post.lineage}')]`, json: posts});\n      lineageList.sort(sortPosts);\n      return {list: lineageList, id: post.id, name: post.lineage};\n    } else {\n      return {};\n    }\n  }\n\n  const lineageData = calculateLineage();\n\n  \n\n  \n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n\n\n  const staticContentVariants = {\n    hidden: {opacity: 0},\n    show: {\n      opacity: 1,\n      transition: {\n        duration: 0.5\n      }\n    }\n  }\n\n  return (\n    <Hidden mdDown implementation=\"css\">\n      <Paper\n        component={motion.div} \n        initial=\"hidden\"\n        animate=\"show\"\n        variants={staticContentVariants}\n        className={classes.rightAside}>\n        \n\n\n        {\n          lineageData.name === undefined ? (<div></div>) : (\n            <div className={classes.lineageHolder}>\n              <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                  <AccountTree />\n                </ListItemIcon>\n                <ListItemText primary={lineageData.name} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List className={classes.lineageList} dense={true}>\n                  {\n                    lineageData.list.map((post, index) => {\n                      return (\n                        <ListItem key={\"lineage-\"+index} onClick={() => {\n                            navigate(parsePostUrl(post.id, post.title))\n                          }} selected={post.id === lineageData.id} button>\n                          <ListItemAvatar>\n                            {\n                              post.id === lineageData.id ?\n                              <Avatar >\n                                <TurnedInIcon />\n                              </Avatar> :\n                              <Avatar >\n                                <TurnedInNotIcon />\n                              </Avatar>  \n\n                            }\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={post.title}\n                            secondary={post.created}\n                          />\n                        </ListItem>\n                      );\n                    })\n                  }                  \n                </List>\n              </Collapse>\n            </div>\n          )\n        }\n        \n          \n        \n\n                  \n      </Paper>\n    </Hidden>\n  );\n}\n\nexport default RightSidebar;\n","\nimport React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport {JSONPath} from 'jsonpath-plus';\nimport ReactMarkdown from 'react-markdown';\nimport Tex from '@matejmazur/react-katex'\nimport math from 'remark-math'\nimport 'katex/dist/katex.min.css'\nimport Divider from '@mui/material/Divider';\n\nimport {\n  useNavigate,\n  useParams\n} from \"react-router-dom\";\n\nimport axios from 'axios';\nimport { Skeleton } from '@mui/material';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport { xonokai, coldarkDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport Chip from '@mui/material/Chip';\n\nimport Tooltip from '@mui/material/Tooltip';\n\nimport LinearProgress from '@mui/material/LinearProgress';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBack from '@mui/icons-material/ArrowBack';\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport {\n  AnimatePresence,\n  motion\n} from 'framer-motion';\nimport { URI_POST_FILES } from '../config';\nimport { nonCachedRequest } from './helper';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateCurrentPost } from '../features/currentPostSlice';\nimport { getPostsJson } from '../features/allPostsSlice';\n\nimport { selectSecret } from '../features/secretState';\n\n\nimport Crypto from \"crypto-js\";\nimport RightSidebar from './RightSidebar';\n\nconst useStyles = makeStyles((theme) => ({\n  actionBar: {\n    // position: 'fixed',\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(1),\n  },\n  paper: {\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(10),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(6),\n    minHeight: '50vh',\n    fontFamily: 'Roboto',\n    \"& a\": {\n      textDecoration: \"none\",\n    },\n    [theme.breakpoints.down('lg')]: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      marginTop: theme.spacing(1),\n      padding: theme.spacing(2),\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(40),\n    fontWeight: theme.typography.fontWeightBold\n  },\n  divider: {\n    marginTop: theme.spacing(4),\n  },\n  categoryName: {\n    marginRight: theme.spacing(1),\n  },\n  dateHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2)\n  },\n  dateStyle: {\n    fontWeight: theme.typography.fontWeightLight,\n    fontSize: theme.typography.pxToRem(13)\n  },\n  markdownHolder: {\n    // padding: theme.spacing(2)\n  },\n  markdownImage: {\n    maxWidth: '100%'\n  },\n  loader: {\n    alignSelf: 'center'\n  }\n}));\n\n\nconst LoadingHeader = (postMetaData) => {\n  const classes = useStyles();\n\n  return(\n    <div>\n      <Typography className={classes.heading} variant=\"h2\" component=\"h1\">\n        {postMetaData.title}\n      </Typography>\n      <span className={classes.dateHolder}>\n        <Chip className={classes.categoryName} label={postMetaData.category} />\n        <Typography className={classes.dateStyle} variant=\"body2\" component=\"p\">\n          created on {postMetaData.created}\n        </Typography>\n      </span>\n      <Divider className={classes.divider} variant=\"middle\" />\n    </div>\n  );\n\n}\n\nfunction HomeContent(props) {\n  const classes = useStyles();\n  \n  const { idRaw } = useParams();\n  const id = idRaw.split('-')[0];\n\n  const dispatch = useDispatch();\n  const posts = useSelector(getPostsJson);\n  \n  const [loadingPost, setLoadingPost] = React.useState(true);\n  const [postMetaData, setPostMetaData] = React.useState(null);\n  const [postData, setPostData] = React.useState(\"\");\n  const [found, setFound] = React.useState(false);\n\n  const secretPass = useSelector(selectSecret);\n\n  const smoothLoadingEnd = () => {\n    setLoadingPost(false);\n  }\n\n  React.useEffect(() => {\n    const renderPostFromLink = (meta) => {\n      axios.get(nonCachedRequest(URI_POST_FILES+'/'+meta.link, {}))\n        .then((response) => {\n          let post = response.data\n          \n          if (meta.category === \"Secret\") {\n            var bytes  = Crypto.AES.decrypt(post, secretPass);\n            // If the encoding fails, we know for sure it was a wrong password, hence the catch case will set the not found flag to true\n            post = bytes.toString(Crypto.enc.Utf8);\n          }\n\n          var lines = post.split('\\n');\n          // get rid of the metadata comments\n          lines.splice(0,5);\n          var newtext = lines.join('\\n');\n\n          setPostData(newtext);\n        })\n        .catch((err) => {\n          setFound(false);\n        })\n        .finally(() => {\n          smoothLoadingEnd();\n        })\n    }\n\n    let post = JSONPath({path: `$.posts[?(@.id === ${id})]`, json: posts})\n    let secret = false;\n    if(post.length < 1) {\n      secret = true;\n      if (!secretPass) {\n        smoothLoadingEnd();\n        setFound(false);\n        return;\n      }\n      post = JSONPath({path: `$.secrets[?(@.id === ${id})]`, json: posts})\n    }\n\n    if(post.length < 1) {\n      smoothLoadingEnd();\n      setFound(false);\n    } else {\n      // console.log(post[0])\n      if (!secret) {\n        dispatch(updateCurrentPost(post[0]));\n      }\n      let meta = post[0]\n      setPostMetaData(meta);\n      \n      // // during debugging, simulate network load time\n      // setTimeout(function() {\n        //   renderPostFromLink(post[0].link);\n        //   //your code to be executed after 1 second\n        // }, 1500);\n        \n        renderPostFromLink(meta);\n        \n        \n        setFound(true);\n    }\n  }, [idRaw]);\n\n  const renderSkeleton = (msg) => (\n    <div>\n      <Typography gutterBottom variant=\"h6\" component=\"h2\">\n        {msg}\n      </Typography>\n      <Skeleton style={{borderRadius: 5}} variant=\"rectangular\" width={\"100%\"} height={\"60vh\"} />\n    </div>\n  )\n\n  function ImageRenderer(props) {\n    return <img {...props} className={classes.markdownImage} />\n  }\n  \n\n  const renderers = {\n    math: ({value}) => <Tex block math={value} />,\n    inlineMath: ({value}) => <Tex math={value} />,\n    code: ({language, value}) => {\n      return <SyntaxHighlighter wrapLongLines wrapLines style={coldarkDark} language={language} children={value} />\n    },\n    image: ImageRenderer\n  }\n\n  const pageVariants = {\n    in: {\n      opacity: 1,\n      y: 0\n    },\n    out: {\n      opacity: 0,\n      y: \"10vh\"\n    },\n    FadeIn: {\n      opacity: 1\n    },\n    FadeOut: {\n      opacity: 0\n    }\n  }\n\n  const pageTransitions = {\n    duration: .2,\n    type: \"backInOut\",\n  }\n\n  const navigate = useNavigate();\n  return loadingPost ? <LinearProgress variant=\"indeterminate\" /> :\n  <motion.div\n    initial=\"out\"\n    animate=\"in\"\n    exit=\"out\"\n    variants={pageVariants}\n    transition={pageTransitions}\n  >\n    <div className={classes.actionBar}>\n      <Tooltip title=\"Go Back\" aria-label=\"go-home\" arrow>\n        {/* <Link to=\"/\"> */}\n          <IconButton onClick={() => {\n            navigate(-1)\n          }} color=\"primary\" aria-label=\"go-home\" size=\"large\">\n            <ArrowBack />\n          </IconButton>\n        {/* </Link> */}\n      </Tooltip>\n    </div>  \n    <AnimatePresence mode='wait'>\n      <Paper\n        component={motion.div}\n        initial=\"FadeOut\"\n        animate=\"FadeIn\"\n        exit=\"FadeOut\"\n        variants={pageVariants}\n        transition={pageTransitions}\n        className={classes.paper} elevation={3}>\n        {\n          !found ? (renderSkeleton(\"Post not found, please drop an email so I can have a look at this 👻 Thank you\")) : \n            loadingPost ? <LoadingHeader postMetaData={postMetaData} /> :\n          \n            <div>\n              <Typography className={classes.heading} variant=\"h2\" component=\"h1\">\n                {postMetaData.title}\n              </Typography>\n              <span className={classes.dateHolder}>\n                <Chip className={classes.categoryName} label={postMetaData.category} />\n                <Typography className={classes.dateStyle} variant=\"body2\" component=\"p\">\n                  created on {postMetaData.created}\n                </Typography>\n              </span>\n              <Divider className={classes.divider} variant=\"middle\" />\n              <ReactMarkdown className={classes.markdownHolder} plugins={[math]} renderers={renderers}>\n                {postData}\n              </ReactMarkdown>\n            </div>\n        }\n      </Paper>\n\n    </AnimatePresence>\n  </motion.div>;\n}\n\nexport default HomeContent;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Typography } from \"@mui/material\";\n\n// Word wrapper\nconst Wrapper = (props) => {\n  // We'll do this to prevent wrapping of words using CSS\n  return <span className=\"word-wrapper\">{props.children}</span>;\n};\n\n// Map API \"type\" vaules to JSX tag names\nconst tagMap = {\n  paragraph: \"p\",\n  heading1: \"h1\"\n};\n\n// AnimatedCharacters\n// Handles the deconstruction of each word and character to setup for the\n// individual character animations\nconst AnimatedCharacters = (props) => {\n  // Framer Motion variant object, for controlling animation\n  const item = {\n    hidden: {\n      y: \"200%\",\n      transition: { ease: [0.455, 0.03, 0.515, 0.955], duration: 0.85 }\n    },\n    visible: {\n      y: 0,\n      transition: { ease: [0.455, 0.03, 0.515, 0.955], duration: 0.75 }\n    }\n  };\n\n  //  Split each word of props.text into an array\n  const splitWords = props.text.split(\" \");\n\n  // Create storage array\n  const words = [];\n\n  // Push each word into words array\n  for (const [, item] of splitWords.entries()) {\n    words.push(item.split(\"\"));\n  }\n\n  // Add a space (\"\\u00A0\") to the end of each word\n  words.map((word) => {\n    return word.push(\"\\u00A0\");\n  });\n\n  // Get the tag name from tagMap\n  const Tag = tagMap[props.type];\n\n  return (\n    <Tag>\n      {words.map((word, index) => {\n        return (\n          // Wrap each word in the Wrapper component\n          <Wrapper key={index}>\n            {words[index].flat().map((element, index) => {\n              return (\n                <span\n                  style={{\n                    overflow: \"hidden\",\n                    display: \"inline-block\"\n                  }}\n                  key={index}\n                >\n                  <Typography variant=\"h4\" component=\"h1\">\n                    <motion.span\n                      style={{ display: \"inline-block\" }}\n                      variants={item}\n                    >\n                      {element}\n                    </motion.span>\n\n                  </Typography>\n                </span>\n              );\n            })}\n          </Wrapper>\n        );\n      })}\n      {/* {} */}\n    </Tag>\n  );\n};\n\nexport default AnimatedCharacters;\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport {\n    motion\n} from 'framer-motion';\n\nimport AnimatedText from '../components/AnimatedText'\nimport { Link, NavLink, useLocation } from 'react-router-dom';\n\nimport {\n  SITENAME\n} from '../config'\n\nconst pages = [\n  ['Home', \"/\", false],\n  ['Blog', \"/blog\", false],\n  ['Thesis (coming soon)', \"/thesis\", true]\n];\n\n\nfunction NavBar() {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n\n  const location = useLocation();\n\n  \n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n\n  const container = {\n    visible: {\n      transition: {\n        staggerChildren: 0.04\n      }\n    }\n  }\n\n  return (\n    <AppBar elevation={0} position=\"static\" color=\"transparent\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n\n          <Box sx={{ position: 'relative', top: -10, display: { xs: 'inline-block', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"navbar button\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              \n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem\n                  disabled={page[2]}\n                  key={`nav-${page[1]}`}\n                  component={Link}\n                  to={page[1]}\n                  onClick={handleCloseNavMenu}\n                >\n                  <Typography textAlign=\"center\">{page[0]}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n\n          <motion.div\n            key=\"header-logo\"\n            style={{\n                flexGrow: 1\n            }}\n            className=\"App\"\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={container}\n          >\n            <div className=\"container\">\n              <AnimatedText type=\"heading1\" text={SITENAME} />\n            </div>\n          </motion.div>\n\n\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => {\n              const currPath = location.pathname === page[1]\n              return <Button\n                disabled={page[2]}\n                key={`nav-${page[1]}`}\n                component={Link}\n                to={page[1]}\n                sx={(theme) => { return {my: 2, fontWeight: currPath ? \"bold\" : \"normal\", color: currPath ? 'text.primary' : 'text.secondary', display: 'block'} }}\n              >\n                {page[0]}\n              </Button>\n            })}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default NavBar;","\nimport React from 'react';\n\nimport SelectedPost from '../components/SelectedPost';\nimport PostsContainer from '../components/PostsContainer';\nimport SearchableActionBar from '../components/SearchableActionBar';\nimport ImageCard from '../components/ImageCard'\nimport TextCard from '../components/TextCard'\nimport PostPage from '../components/PostPage'\nimport NavBar from '../components/NavBar'\n\nimport {\n  AnimatePresence,\n  motion\n} from 'framer-motion';\nimport { Button, Grid, LinearProgress, Paper, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\n\nimport { Home } from '@material-ui/icons';\nimport RightSidebar from '../components/RightSidebar';\nimport { useSelector } from 'react-redux';\nimport { getPostsJson } from '../features/allPostsSlice';\n\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport {\n  IMAGEURI,\n  USERNAME,\n  ABOUTUSER,\n  GETINTOUCHTEXT,\n  CONTACTLINKS,\n  NEWSITEMS,\n  INTERESTS,\n  SKILLSTEXT,\n  SKILLSITEMS,\n  LOOKINGFORTEXT,\n  QUOTE,\n  RESEARCHINTERESTS,\n  EDUCATION,\n  ABOUTME\n} from '../config'\nimport { Masonry } from '@mui/lab';\n\nimport {\n  BrowserRouter,\n  createBrowserRouter,\n  Link,\n  Outlet,\n  Route,\n  RouterProvider,\n  Routes,\n  useLocation,\n} from \"react-router-dom\";\n\nconst staticContentVariants = {\n  hidden: {opacity: 0, scale: 0.90 },\n  show: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.3\n    }\n  },\n  out: {\n    opacity: 0,\n    scale: 0.90,\n    transition: {\n      duration: 10\n    }\n  }\n}\n\nfunction PostRenderer() {\n  const { posts } = useSelector(getPostsJson);  \n  \n  if (posts) {\n    return <div>\n      <PostPage />\n    </div>\n  } else {\n    return <LinearProgress color=\"secondary\" />\n  }\n}\n\nfunction BlogRenderer() {\n  const { posts } = useSelector(getPostsJson);  \n  \n  if (posts) {\n    return <motion.div\n      initial=\"hidden\"\n      animate=\"show\"\n      exit=\"out\"\n      variants={staticContentVariants}\n      container\n    >\n      <PostsContainer />\n      {/* <SearchableActionBar /> */}\n      {/* <SelectedPost />\n      <Outlet /> */}\n    </motion.div>\n  } else {\n    return <LinearProgress color=\"secondary\" />\n  }\n}\n\n\nconst heights = [150, 30, 90, 70, 90, 100, 150, 30, 50, 80];\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(0.5),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\n\nfunction StaticContent(props) {\n  return (\n    <Masonry \n      component={motion.div}\n      initial=\"hidden\"\n      animate=\"show\"\n      exit=\"out\"\n      variants={staticContentVariants}\n      columns={{ xs: 1, sm: 1, md: 3, lg: 3 }}\n      spacing={0}\n      >\n      <TextCard key={`home-${1}`} title=\"News\" \n              textList={NEWSITEMS}/>\n      <TextCard key={`home-${2}`} title=\"Research Interests\" text={RESEARCHINTERESTS} />\n\n      <TextCard key={`home-${3}`} title=\"Looking For\" text={LOOKINGFORTEXT} />\n      <TextCard key={`home-${4}`} title=\"Something About Me\" text={ABOUTME} />\n      <TextCard\n              key={`home-${5}`}\n              title=\"Skills\"\n              text={SKILLSTEXT}\n              textList={SKILLSITEMS}\n              />\n      <TextCard key={`home-${6}`} text={QUOTE} />\n      <TextCard\n        key={`home-${7}`}\n        title=\"Interests\"\n        text={INTERESTS}\n      />\n      <TextCard key={`home-${8}`} title=\"Education\" textList={EDUCATION}/>\n\n    </Masonry>\n  )\n}\n\nfunction HomeContent(props) {\n  const { posts } = useSelector(getPostsJson);\n  const location = useLocation();\n  const isMain = location.pathname === \"/\"\n  // \n  // const history = useHistory();\n  // console.log(\"hist: \", history)\n  return(\n    \n      <div>\n        <NavBar />\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} md={4} lg={isMain ? 3 : 2}>\n            {\n              !isMain && \n              <RightSidebar />\n            }\n            <ImageCard\n              index=\"main-image\"\n              imageUri={IMAGEURI}\n              title={USERNAME} \n              text={isMain ? ABOUTUSER : GETINTOUCHTEXT}\n              links={isMain ? undefined : CONTACTLINKS}\n              small={!isMain}\n              />\n\n\n            {\n              isMain && \n              <TextCard \n                index=\"main-infocard\"\n                title=\"Get it touch?\" \n                text={GETINTOUCHTEXT}\n                links={CONTACTLINKS}\n              />\n            }\n\n            \n\n\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={8} lg={9}>\n            <Outlet />            \n          </Grid>\n\n\n\n      </Grid>\n\n      </div>\n      \n  );\n}\n\n\nfunction HomeWrapper() {\n  \n\n  return(\n    \n    <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<HomeContent />}>\n            <Route\n              path=\"\"\n              element={<StaticContent />}\n            />\n            <Route path=\"blog\" element={<BlogRenderer />}>\n            </Route>\n            <Route path=\"blog/:idRaw\" element={<PostRenderer />} />\n          </Route>\n        </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default HomeWrapper;\n","import React from 'react';\n\nimport { makeStyles } from '@mui/styles';\n\nimport { nonCachedRequest, sortPosts } from './components/helper';\nimport HomeContent from './pages/HomeContent';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport { URI_POSTS } from './config';\nimport { createTheme } from '@mui/material/styles';\n\nimport axios from 'axios';\n\nimport { updatePostsJson } from './features/allPostsSlice';\nimport { useDispatch } from 'react-redux';\n\nimport './App.css';\n\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport { CssBaseline, } from '@material-ui/core';\nimport { Alert, Container, ScopedCssBaseline } from '@mui/material';\nimport { grey, yellow } from '@mui/material/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  mainContent: {\n    flex: 1,\n    height: \"100vh\",\n    overflow: \"scroll\",\n  },\n\n}));\n\nfunction MainContainer(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [alert, setAlert] = React.useState(null);\n\n\n  React.useEffect(() => {\n    axios.get(nonCachedRequest(URI_POSTS), {})\n      .then(function (response) {\n        if(response.data.posts.length > 0) {\n          setAlert([\"success\", \"Blog posts loaded!\"]);\n          setTimeout(() => setAlert(null), 5000)\n          response.data.posts.sort(sortPosts);\n          dispatch(updatePostsJson(response.data)); // put global blog data in redux store\n        } else {\n          setAlert([\"warning\", \"Failed to load posts!\"]);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }, []);\n\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"xl\">\n        <main className={classes.content}>\n            <div className={classes.mainContent}>\n                <HomeContent />\n            </div>\n        </main>\n        {\n          alert && \n          <Alert \n            sx={{\n              position: 'absolute',\n              bottom: 0\n            }}\n            severity={alert[0]}>\n              {alert[1]}\n          </Alert>\n        }\n      </Container>\n    </React.Fragment>\n  );\n}\n\nfunction App(props) {\n  const [light, setLight] = React.useState(false);\n\n\n  const themeLight = createTheme({\n    palette: {\n      mode: 'light',\n      background: {\n        paper: yellow[200],\n        default: grey[100]\n      }\n    }\n  });\n  \n  const themeDark = createTheme({\n    palette: {\n      mode: 'dark'\n    } \n  });\n  \n  return (\n    <ThemeProvider theme={light ? themeLight : themeDark}>\n      <CssBaseline />\n      <ScopedCssBaseline enableColorScheme>\n        <MainContainer/>\n      </ScopedCssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport postsJsonReducer from './features/allPostsSlice';\nimport currentSliceReducer from './features/currentPostSlice';\nimport sidebarState from './features/sidebarState';\nimport secretState from './features/secretState';\n\nexport default configureStore({\n  reducer: {\n    postsJson: postsJsonReducer,\n    currentPost: currentSliceReducer,\n    sidebarState: sidebarState,\n    secretState: secretState\n  }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import {\n//   createBrowserRouter,\n//   RouterProvider,\n// } from \"react-router-dom\";\nimport store from './store';\n\n// const router = createBrowserRouter([\n//   {\n//     path: \"/\",\n//     element: <div>Hello world!</div>,\n//   },\n// ]);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <BrowserRouter basename={process.env.PUBLIC_URL}> */}\n      <App />\n    {/* </BrowserRouter> */}\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}